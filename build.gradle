plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "2.+"
	id 'maven-publish'
	id 'java'
}

repositories {
	maven { url 'https://jitpack.io' }
	mavenCentral()
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots'
	}
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered {
		mappings("net.fabricmc:yarn:$project.yarn_mappings:v2")
		//officialMojangMappings()
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	[
			"fabric-api-base",
			"fabric-command-api-v2",
			"fabric-lifecycle-events-v1",
			"fabric-entity-events-v1",
			"fabric-events-interaction-v0"
	].forEach {
		include(modImplementation(fabricApi.module(it, project.fabric_version)))
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

javadoc {
/*	source = sourceSets.main.allJava

	options.windowTitle = "SDK"
	options.docTitle = "SDK"

	options.docletpath = configurations.doclava.files.asType(List)
	options.doclet = "com.Â¸google.doclava"*/
	//options.stylesheetFile = new File(projectDir, "src/main/javadoc/dracula.css");
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}

// from FAPI https://github.com/FabricMC/fabric/blob/1.16/build.gradle
def ENV = System.getenv()
curseforge {
	if (ENV.CURSEFORGE_API_KEY) {
		apiKey = ENV.CURSEFORGE_API_KEY
	}

	project {
		id = "462519"
		changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/GolfIV/releases/tag/${version}"
		releaseType = "release"
		addGameVersion "${project.minecraft_version}"
		addGameVersion "Fabric"

		mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
			displayName = "[${project.minecraft_version}] GolfIV ${version}"
		}

		afterEvaluate {
			uploadTask.dependsOn("remapJar")
		}
	}

	options {
		forgeGradleIntegration = false
	}
}

tasks.modrinth {
	onlyIf {
		ENV.MODRINTH_TOKEN
	}
}

modrinth {
	token = ENV.MODRINTH_TOKEN
	projectId = "PfKYAJGk"
	versionNumber = version
	versionName = "[${project.minecraft_version}] GolfIV ${version}"
	versionType = "release"
	changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/GolfIV/releases/tag/${version}"

	uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")

	gameVersions = [project.minecraft_version]
	loaders = ['fabric', 'quilt']
}

